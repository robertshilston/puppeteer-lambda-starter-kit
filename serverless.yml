service: audit-with-lighthouse-v1

provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 1536
  timeout: 300
  region: eu-west-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: "Allow"
      Action:
        - lambda:InvokeFunction
      Resource: "${self:custom.functionARN}"
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:GetBucketLocation"
        - "s3:GetObject"
        - "s3:ListBucket"
        - "s3:ListBucketMultipartUploads"
        - "s3:ListMultipartUploadParts"
        - "s3:AbortMultipartUpload"
        - "s3:PutObject"

      Resource: 
        - "arn:aws:s3:::${self:custom.bucket}/*"  
        - "arn:aws:s3:::${self:custom.bucket}"
    - Effect: "Allow"
      Action:
        - athena:StartQueryExecution
        - athena:GetQueryResults
      Resource: "*"

resources:
  Resources:
    LighthouseResultsDynamoDbTableV2:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: url
            AttributeType: S
          - AttributeName: scantimestamp
            AttributeType: N
        KeySchema:
          - AttributeName: url
            KeyType: HASH
          - AttributeName: scantimestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

functions:
  test-function:
    handler: index.handler
    environment:
      DEBUG: 0
    events:
      - http:
          path: finished-page
          method: get

  list:
    handler: list.list
    events:
      - http:
          path: list
          method: get
          cors: true

package:
  artifact: ./package.zip
  
plugins:
  - serverless-hooks-plugin

custom:
  functionARN: "arn:aws:lambda:eu-west-1:945374528520:function:audit-with-lighthouse-v1-dev-test-function"
  hooks:
    package:initialize:
      - npm run package
  bucket: lighthouse-audit-scorecard
